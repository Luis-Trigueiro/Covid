{"version":3,"sources":["components/navbar/img/logo.png","components/navbar/NavBar.js","components/map-chart/MapChart.js","pages/home/Home.js","routes/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","alive","dead","all","history","useNavigate","Navbar","bg","Container","Brand","style","cursor","onClick","src","logo","width","className","alt","Nav","NavbarBrand","MapChart","setTooltipContent","useState","vacine","setvacine","country","setcountry","flags","setflags","useEffect","axios","get","then","res","data","projectionConfig","scale","geography","geographies","map","geo","onMouseEnter","properties","ISO_A2","abbreviation","NAME","vacineList","Object","values","countryList","vaccineVerify","hasOwnProperty","countryData","find","x","All","countryDataVaccinated","countryFlag","cca2","people_vaccinated","population","confirmed","deaths","percentVaccinated","ListGroup","ListGroupItem","png","Math","round","onMouseLeave","default","fill","outline","hover","pressed","rsmKey","memo","Home","characters","setCharacters","results","content","setContent","Routes","basename","process","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc96d6f1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.41bbb49e.png\";","import { Navbar, Nav, Container, NavbarBrand } from \"react-bootstrap\"\r\nimport { useNavigate } from 'react-router';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport logo from './img/logo.png';\r\n\r\n\r\nconst NavBar = ({ alive, dead, all }) => {\r\n\r\n    const history = useNavigate()\r\n\r\n    return (\r\n        <Navbar bg=\"light\">\r\n            <Container>\r\n                <Navbar.Brand style={{ cursor: \"pointer\" }} onClick={() => history(`/`)}>\r\n                    <img\r\n                        src={logo}\r\n                        width=\"95px\"\r\n                        className=\"d-inline-block align-top\"\r\n                        alt=\"Rick and Morty logo\"\r\n                    />\r\n                </Navbar.Brand>\r\n                <Nav className=\"me-auto\">\r\n                    <NavbarBrand>COVID LIVE</NavbarBrand>\r\n                </Nav>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\nNavBar.propTypes = {\r\n    alive: PropTypes.func,\r\n    dead: PropTypes.func,\r\n    all: PropTypes.func\r\n}\r\nexport default NavBar","import React, { memo, useState, useEffect } from 'react';\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\nimport axios from \"axios\";\r\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\r\nimport { width } from 'dom-helpers';\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst MapChart = ({ setTooltipContent }) => {\r\n\r\n  const [vacine, setvacine] = useState([]);\r\n  const [country, setcountry] = useState([]);\r\n  const [flags, setflags] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('https://covid-api.mmediagroup.fr/v1/vaccines').then(res => { setvacine(res.data) });\r\n    axios.get('https://covid-api.mmediagroup.fr/v1/cases').then(res => { setcountry(res.data) });\r\n    axios.get('https://restcountries.com/v3.1/all').then(res => { setflags(res.data) });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\r\n        <ZoomableGroup>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map(geo => (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  onMouseEnter={() => {\r\n                    const { abbreviation, ISO_A2, NAME } = geo.properties;\r\n                    const vacineList = Object.values(vacine);\r\n                    const countryList = Object.values(country);\r\n                    const vaccineVerify = vacine.hasOwnProperty(NAME);\r\n                    const countryData = countryList.find(x => x?.All?.abbreviation === ISO_A2);\r\n                    const countryDataVaccinated = vacineList.find(x => x?.All?.abbreviation === ISO_A2);\r\n                    const countryFlag = flags.find(x => x?.cca2 === ISO_A2);\r\n                    const people_vaccinated = countryDataVaccinated?.All?.people_vaccinated;\r\n                    const population = countryData?.All?.population;\r\n                    const confirmed = countryData?.All?.confirmed;\r\n                    const deaths = countryData?.All?.deaths;\r\n                    const percentVaccinated = (people_vaccinated / population) * 100;\r\n                    setTooltipContent(\r\n                      <ListGroup>\r\n                        <ListGroupItem>{NAME} <span> <img style={{ width: \"20px\" }} src={countryFlag?.flags?.png}></img></span></ListGroupItem>\r\n                        {population && <ListGroupItem>Confirmed: {confirmed}</ListGroupItem>}\r\n                        {population && <ListGroupItem>Population: {population}</ListGroupItem>}\r\n                        {(vaccineVerify && population) && <ListGroupItem>People Vaccinated: {people_vaccinated}</ListGroupItem>}\r\n                        {(vaccineVerify && population) && <ListGroupItem>Fully vaccinated population %: {Math.round(percentVaccinated)}%</ListGroupItem>}\r\n                        {population && < ListGroupItem > Deaths: {deaths}</ListGroupItem>}\r\n                      </ListGroup>);\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                  }}\r\n                  style={{\r\n                    default: {\r\n                      fill: \"#D6D6DA\",\r\n                      outline: \"none\"\r\n                    },\r\n                    hover: {\r\n                      fill: \"#F53\",\r\n                      outline: \"none\"\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#E42\",\r\n                      outline: \"none\"\r\n                    }\r\n                  }}\r\n                />\r\n              ))\r\n            }\r\n          </Geographies>\r\n        </ZoomableGroup>\r\n      </ComposableMap>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(MapChart);\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Row, Button } from 'react-bootstrap';\r\nimport NavBar from '../../components/navbar/NavBar';\r\nimport { scrollTop } from 'dom-helpers';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport MapChart from \"../../components/map-chart/MapChart\"\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const [characters, setCharacters] = useState([])\r\n\r\n    const scrollTop = () => {\r\n        document.body.scrollTo({ top: 0, behavior: 'smooth' })\r\n        document.documentElement.scrollTo({ top: 0, behavior: 'smooth' })\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get('https://covid-api.mmediagroup.fr/v1/cases?country=France').then(res => { setCharacters(res.data) })\r\n\r\n    }, []);\r\n\r\n   \r\n    const allCharacters = characters.results;\r\n\r\n    const alive = () => axios.get('https://rickandmortyapi.com/api/character/?status=alive').then(res => { setCharacters(res.data) })\r\n    const dead = () => axios.get('https://rickandmortyapi.com/api/character/?status=dead').then(res => { setCharacters(res.data) })\r\n    const all = () => axios.get('https://rickandmortyapi.com/api/character').then(res => { setCharacters(res.data) })\r\n\r\n    const nextPage = () => { axios.get(characters.info?.next).then(res => { setCharacters(res.data); scrollTop() }) };\r\n    const backPage = () => { axios.get(characters.info?.prev).then(res => { setCharacters(res.data); scrollTop() }) };\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <NavBar alive={alive} dead={dead} all={all} />\r\n            </header>\r\n    \r\n            <div>\r\n                <MapChart setTooltipContent={setContent} />\r\n                <ReactTooltip>{content}</ReactTooltip>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Home","import React from \"react\";\r\nimport Home from \"../pages/home/Home\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes as Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n                <Route path=\"/\" element={<Home/>} />,\r\n            </Switch>\r\n        </Router>\r\n\r\n    )\r\n}\r\n\r\nexport default Routes","import Routes from './routes/Routes';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n   <Routes></Routes>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}